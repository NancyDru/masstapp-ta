<?php
/**
 * @file
 * Common username support.
 */

/**
 * Implements hook_username_alter().
 * Invoked by format_username();
 */
function simple_username_username_alter(&$name, $account) {
  static $names = array();

  if (!is_object($account)) {
    return t('Invalid User');
  }

  // If the uid is 0 or not present, assume the user is anonymous.
  // Also, new users don't have a profile built yet, so just go away.
  if (empty($account->uid) || (isset($account->is_new) && $account->is_new)) {
    return variable_get('anonymous', t('Anonymous'));
  }

  if (isset($names[$account->uid])) {
    $name = $names[$account->uid];
    return;
  }

  // Sometimes we don't get a full user object.
  if (!isset($account->field_first_name)) {
    $account = user_load($account->uid);
  }

  // Get their first name. It will be FALSE if not given.
  $first = field_get_items('user', $account, 'field_first_name');
  if ($first) {
    $first = $first[0]['value'];
  }
  else {
    $first = t('unknown');
  }
  // Likewise, the last name.
  $last = field_get_items('user', $account, 'field_last_name');
  if ($last) {
    $last = $last[0]['value'];
  }
  else {
    $last = t('unknown');
  }

  // Save it and return.
  $name = $first . ' ' . $last;
  $names[$account->uid] = $name;
}

/**
 * Implements hook_enable().
 */
function simple_username_enable() {
  field_cache_clear();
  field_associate_fields('simple_username');

  // First Name - field_first_name - Text - Text field
  if (!field_info_field('field_first_name')) {
    // Create the field base.
    $field = array('field_name' => 'field_first_name', 'type' => 'text',);
    $field = field_create_field($field);

    // Create the instance on the user entity.
    $instance['field_first_name'] = array(
      'field_name' => $field['field_name'],
      'entity_type' => 'user',
      'bundle' => 'user',
      'label' => 'First Name',
      'description' => 'Enter your first name. The system will use it and the last name for your username.',
      'required' => TRUE,
      'settings' => array(
        'user_register_form' => 1,    // Make it show on registration.
        ),
      'widget' => array('type' => 'textfield'),
      'display' => array(
        'default' => array('label' => 'inline'),
        ),
      );

    drupal_set_message($field['field_name'].' was created.');
  }

  // Last Name - field_last_name - Text -    Text field
  if (!field_info_field('field_last_name')) {
    // Create the field base.
    $field = array('field_name' => 'field_last_name', 'type' => 'text',);
    $field = field_create_field($field);

    // Create the instance on the user entity.
    $instance['field_last_name'] = array(
      'field_name' => $field['field_name'],
      'entity_type' => 'user',
      'bundle' => 'user',
      'label' => 'Last Name',
      'description' => 'Enter your last name. The system will use it and the first name for your username.',
      'required' => TRUE,
      'settings' => array(
        'user_register_form' => 1,
        ),
      'widget' => array('type' => 'textfield'),
      'display' => array(
        'default' => array('label' => 'inline'),
        ),
      );

    drupal_set_message(t('@name was created.',
      array('@name' => $field['field_name'])));
  }

  dpm($instance);
  if(!empty($instance)){
    foreach ($instance as $instance_field){
      field_create_instance($instance_field);
      drupal_set_message(t('"@name" was added to the user entity.',
        array('@name' => $instance_field['label'])));
    }
  }
}